name: Run Full Tests Suite
on:
  pull_request:
  workflow_dispatch:
  push:
    branches: main

env:
  API_URL: http://localhost:3003
  AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_AWS_ACCESS_SECRET }}
  AWS_REGION: us-east-1
  CLERK_API_KEY: ${{ secrets.STAGING_CLERK_API_KEY }}
  CLERK_FRONTEND_API: clerk.in.horse-0.lcl.dev
  DATABASE_URL: mysql://root:root@127.0.0.1:3306/samepage_network
  NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
  ORIGIN: http://localhost:3000
  SVIX_SECRET: ${{ secrets.SVIX_SECRET }}
  WEB3_STORAGE_API_KEY: ${{ secrets.WEB3_STORAGE_API_KEY }}
  WEB_SOCKET_URL: ws://localhost:3003

jobs:
  deploy:
    # runs-on: ubuntu-22.04
    # c8 was not picking up coverage on package/components in 20.04 - maybe try in the future with 22.04
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ hashFiles('**/package-lock.json') }}
      - name: install
        run: npm install
          # sudo systemctl start mysql.service
          # node scripts/debug.js
      - name: setup mysql + playwright
        run: |
          npx playwright install chromium
          brew install mysql
          /usr/local/opt/mysql/bin/mysql.server start
          mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'root'" -uroot
          mysql -e "CREATE DATABASE samepage_network" -uroot -proot
          npx ts-node scripts/cli.ts plan --sql
          npx ts-node scripts/cli.ts apply --sql --bare
          mysql -e "INSERT INTO samepage_network.quotas (uuid, value, field) VALUES (UUID(), 100, 0), (UUID(), 3, 1)" -uroot -proot
          mysql -e "INSERT INTO samepage_network.apps (id, code, name, workspace_label, live) VALUES (0, 'samepage', 'SamePage', 'workspace', false)" -uroot -proot
          mysql -e "SELECT * FROM samepage_network.apps" -uroot -proot
          mysql -e "UPDATE samepage_network.apps SET id = 0 WHERE code = 'samepage'" -uroot -proot
          npx ngrok authtoken NGROK_AUTH_TOKEN
      # We separated unit tests and integration tests because c8 was having a hard time consolidating reports - but code cov wasn't!
      - name: Unit Tests
        run: npm t -- --project unit
      - name: Upload Unit Test Coverage to Codecov
        uses: codecov/codecov-action@v3      
      - name: Integration Tests
        run: npm t -- --project integration
      - name: Upload Integration Test Coverage to Codecov
        uses: codecov/codecov-action@v3
