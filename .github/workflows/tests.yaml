name: Run Full Tests Suite
on:
  pull_request:
  workflow_dispatch:
  push:
    branches: main

env:
  API_URL: http://localhost:3003
  AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOY_AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOY_AWS_ACCESS_SECRET }}
  AWS_REGION: us-east-1
  CLERK_SECRET_KEY: ${{ secrets.STAGING_CLERK_SECRET_KEY }}
  DATABASE_URL: mysql://root:root@127.0.0.1:3306/samepage_network
  NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
  ORIGIN: http://localhost:3000
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
  SVIX_SECRET: ${{ secrets.SVIX_SECRET }}
  WEB3_STORAGE_API_KEY: ${{ secrets.WEB3_STORAGE_API_KEY }}
  WEB_SOCKET_URL: ws://localhost:3003

jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: samepage_network
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ hashFiles('**/package-lock.json') }}
      - name: install
        run: npm install
      - name: setup mysql + playwright
        run: |
          npx playwright install chromium
          npx ts-node scripts/cli.ts plan --sql
          npx ts-node scripts/cli.ts apply --sql --bare
          npx ngrok authtoken $NGROK_AUTH_TOKEN
      - name: Unit Tests
        run: npm t -- --proj unit
      - name: Upload Unit Test Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
