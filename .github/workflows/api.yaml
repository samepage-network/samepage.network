name: Publish API
on:
  workflow_dispatch:
  push:
    branches: main
    paths:
      - "api/**"
      - "app/data/**"
      - ".github/workflows/api.yaml"
      - "scripts/commands/compile.ts"
      - "scripts/commands/update.ts"
      - "scripts/internal/updateLambdaFunctions.ts"

env:
  API_URL: https://api.samepage.network
  API_GATEWAY_ID: ${{ secrets.API_GATEWAY_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.LAMBDA_AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.LAMBDA_AWS_ACCESS_SECRET }}
  AWS_REGION: us-east-1
  CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
  CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
  CLOUDFORMATION_ROLE_ARN: ${{ secrets.CLOUDFORMATION_ROLE_ARN }}
  CLOUDFRONT_HOSTED_ZONE_ID: ${{ secrets.CLOUDFRONT_HOSTED_ZONE_ID }}
  CLOUDFRONT_SECRET: ${{ secrets.CLOUDFRONT_SECRET }}
  CONVERTKIT_API_KEY: ${{ secrets.CONVERTKIT_API_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  GITHUB_TOKEN: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}
  IS_PRODUCTION: 1
  ORIGIN: https://samepage.network
  REMIX_CACHE_POLICY_ID: ${{ secrets.REMIX_CACHE_POLICY_ID }}
  S3_WEBSITE_ENDPOINT: ${{ secrets.S3_WEBSITE_ENDPOINT }}
  SAMEPAGE_DEVELOPMENT_TOKEN: ${{ secrets.SAMEPAGE_DEVELOPMENT_TOKEN }}
  SAMEPAGE_HOSTED_ZONE_ID: ${{ secrets.SAMEPAGE_HOSTED_ZONE_ID }}
  SNS_TOPIC_ARN: ${{ secrets.SNS_TOPIC_ARN }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
  SVIX_SECRET: ${{ secrets.SVIX_SECRET }}
  VELLUM_API_KEY: ${{ secrets.VELLUM_API_KEY }}
  WEB3_STORAGE_API_KEY: ${{ secrets.WEB3_STORAGE_API_KEY }}
  WEBSITE_PUBLISHING_LAMBDA_ARN: ${{ secrets.WEBSITE_PUBLISHING_LAMBDA_ARN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install
        run: npm install
      - name: build
        run: npx ts-node scripts/cli.ts compile
      - name: deploy
        run: npx ts-node scripts/cli.ts update
